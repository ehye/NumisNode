extend type Query {
  allSubjects(category: String): [Subject!]
  getSubject(id: String!): Subject
}

extend type Mutation {
  createSubject(input: SubjectCreate!): SubjectCreateUpdateResponse
  updateSubject(input: SubjectUpdate!): SubjectCreateUpdateResponse
}

type Subject {
  id: ID
  title: String
  category: String
  issuer: Issuer
  min_year: Int
  max_year: Int
  obverse_thumbnail: String
  reverse_thumbnail: String
  likesCount: Int
  likedBy: [User!]
}

input SubjectCreate {
  title: String!
  category: String
  min_year: Int
  max_year: Int
  issuer: String
  obverse_thumbnail: String
  reverse_thumbnail: String
}

input SubjectUpdate {
  id: ID!
  title: String
  category: String
  min_year: Int
  max_year: Int
  issuer: String
  obverse_thumbnail: String
  reverse_thumbnail: String
}

type SubjectCreateUpdateResponse {
  id: ID
  title: String
  category: String
  issuer: Issuer
  min_year: Int
  max_year: Int
  obverse_thumbnail: String
  reverse_thumbnail: String
}
